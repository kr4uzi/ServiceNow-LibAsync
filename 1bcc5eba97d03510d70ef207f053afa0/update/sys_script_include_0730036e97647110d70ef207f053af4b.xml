<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_script_include">
    <sys_script_include action="INSERT_OR_UPDATE">
        <access>package_private</access>
        <active>true</active>
        <api_name>x_424426_async.WaitForCondition</api_name>
        <caller_access/>
        <client_callable>false</client_callable>
        <description/>
        <name>WaitForCondition</name>
        <script><![CDATA[var WaitForCondition = Class.create();
WaitForCondition.prototype = Object.extendsObject(x_424426_async.Task, {
	initialize: function (table, query) {
		const extensionPoints = new GlideScriptedExtensionPoint().getExtensions("QueryExt");
		if (extensionPoints.length) {
			// always use the extension point with the lowest order
			const queryExt = extensionPoints[0];
			queryExt.initialize();
			
			x_424426_async.Task.prototype.initialize.call(this, function () {
				const anyGr = queryExt.queryOne(table, query);
				for (;;) {
					anyGr.query();
					if (anyGr.next()) {
						return anyGr;
					}

					this.sleepUtil.sleep(20);
				}			
			}.bind(this));
		} else {
			throw new Error("No Extension Point Implementation for 'QueryExt'");
		}
	},

    type: "WaitForCondition"
});]]></script>
        <sys_class_name>sys_script_include</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2023-08-12 13:21:24</sys_created_on>
        <sys_id>0730036e97647110d70ef207f053af4b</sys_id>
        <sys_mod_count>3</sys_mod_count>
        <sys_name>WaitForCondition</sys_name>
        <sys_package display_value="Lib Async" source="x_424426_async">1bcc5eba97d03510d70ef207f053afa0</sys_package>
        <sys_policy/>
        <sys_scope display_value="Lib Async">1bcc5eba97d03510d70ef207f053afa0</sys_scope>
        <sys_update_name>sys_script_include_0730036e97647110d70ef207f053af4b</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2023-08-12 16:28:46</sys_updated_on>
    </sys_script_include>
</record_update>
